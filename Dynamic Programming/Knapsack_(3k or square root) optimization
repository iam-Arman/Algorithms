 function<ll(vector<int>&,int)> get=[&](vector<int>&v,int size)
   {
       sort(allr(v));
       if(v.size() and v[0]*2>=size)
       {
          return 1LL*v[0]*(size-v[0]);
       }
       size=0;
       for(auto it : v) size+=it;

       Cool_Bitset dp(size+1);
       dp.set(0, 1);
       multiset<int> st;
       for(auto it : v){
         st.insert(it);
       }
       vector<int> vv;

       while(st.size())
       {
          if(st.size()>=3 and *st.begin()==*next(st.begin(),2))
          {
               st.insert(*st.begin()*2);
               st.erase(st.begin());
               st.erase(st.begin());
          }
          else
          {
               vv.pb(*st.begin());
               st.erase(st.begin());
          }
       }

      for(auto it : vv)
      {
          dp.left_shift(it);
      }

       ll ans=0;
       for(int i=0;i<=size;i++)
       {
         if(dp.get(i)!=0) ans=max(ans,1LL*i*(size-i));
       }

       return ans;

   };
